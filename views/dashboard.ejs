<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <title>DashBoard</title>
        
        <script
            src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
        </script>
        
        <script 
            src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"> 
        </script> 

        <!--  
        <link rel="stylesheet" type="text/css" href="./stylesheets/index.css" media="screen" />
        -->

        <style> 
            div {
              width: 800px;
              height: 100px;
              background-color: red;
              animation-name: example;
              animation-duration: 10s;
              
              animation-iteration-count: 100;
            }
            
            @keyframes example {
              from {background-color: rgb(4, 0, 255);}
              to {background-color: rgb(0, 89, 255);}
              
            }
            table, th, td {
            border:1px solid black;
            }
        </style>
       
    </head>

    <body>

        <script src="/socket.io/socket.io.js"></script>

        
        <script 
            src="http://code.jquery.com/jquery-latest.min.js"> 
        </script> 


        
        <canvas id="myChart" style="width:100%;max-width:800px"></canvas>

        <script>

            var xyValues = [
            {x:1, y:0},
            {x:2, y:0},
            {x:3, y:0},
            {x:4, y:0},
            {x:5, y:0}
            ];

            new Chart("myChart", {
            type: "scatter",
            data: {
                datasets: [{
                pointRadius: 4,
                pointBackgroundColor: "rgb(0,0,255)",
                data: xyValues
                }]
            },
            options: {
                legend: {display: false},
                scales: {
                xAxes: [{ticks: {min: 0, max:5}}],
                yAxes: [{ticks: {min: 0, max:100}}],
                }
            }
            });
        </script>
        
        <table style="width:70%">
            <tr>
              <th>-------</th>  
              <th>Joining</th>
              <th>Cutoff</th>
              <th>Complaint</th>
              <th>Service</th>
              <th>On hold</th>
            </tr>
        </table>

        <div id="div"></div>
        


        <ul id="messages"></ul>
        <form id="form" action="">
          <input id="input" autocomplete="off" /><button>Send</button>
        </form>

        <script>
            
            var socket = io();

            var messages = document.getElementById('messages');
            var form = document.getElementById('form');
            var input = document.getElementById('input');

            var div = document.getElementById('div');

            
            
            div.addEventListener("webkitAnimationIteration", function(e) {    
                e.preventDefault();
                if (/*input.value*/true) {
                socket.emit('chat message', input.value);
                input.value = '';
                }
            });

            socket.on('chat message', function(msg) {

                

                var xyValues = [
                {x:1, y:msg[0]},
                {x:2, y:msg[1]},
                {x:3, y:msg[2]},
                {x:4, y:msg[3]},
                {x:5, y:msg[4]}
                ];

                new Chart("myChart", {
                type: "scatter",
                data: {
                    datasets: [{
                    pointRadius: 4,
                    pointBackgroundColor: "rgb(0,0,255)",
                    data: xyValues
                    }]
                },
                options: {
                    legend: {display: false},
                    scales: {
                    xAxes: [{ticks: {min: 0, max:5}}],
                    yAxes: [{ticks: {min: 0, max:100}}],
                    }
                }
                });
                
                /*
                var item = document.createElement('li');
                item.textContent = msg;
                messages.appendChild(item);
                window.scrollTo(0, document.body.scrollHeight);
                */
            });
        </script>

    </body>
</html>